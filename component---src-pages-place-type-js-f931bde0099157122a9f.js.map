{"version":3,"sources":["webpack:///./src/pages/PlaceType.js","webpack:///./src/components/presentational/Input.js","webpack:///./src/actions.js","webpack:///./src/utils/Listing.js"],"names":["PlaceType","state","placeType","propertyType","guestSpace","handleInput","evt","_this$setState","_evt$target","target","value","name","_this","setState","onSubmit","data","Object","assign","props","submitPlaceType","advance","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","ContainerStyles","formTitle","_components_presentational_Input__WEBPACK_IMPORTED_MODULE_4__","label","this","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","onClick","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_10___default","React","Component","connect","dispatch","__webpack_exports__","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","ComponentStyles","inputContainer","onChange","__webpack_require__","d","submitBedrooms","submitBathrooms","submitLocation","submitListing","_constants__WEBPACK_IMPORTED_MODULE_0__","_utils_Listing__WEBPACK_IMPORTED_MODULE_1__","type","SUBMIT_PLACE_TYPE","payload","SUBMIT_BEDROOMS","SUBMIT_BATHROOMS","SUBMIT_LOCATION","getState","givenListing","reducer","listing","bathrooms","bedrooms","location","sendListing","process","then","res","submitListingSuccess","catch","err","submitListingError","response","SUBMIT_LISTING_SUCCESS","error","SUBMIT_LISTING_ERROR","Axios__WEBPACK_IMPORTED_MODULE_0__","Axios__WEBPACK_IMPORTED_MODULE_0___default","n","url","listingData","console","log","options","method","JSON","stringify","Axios"],"mappings":"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","file":"component---src-pages-place-type-js-f931bde0099157122a9f.js","sourcesContent":["import React from \"react\"\nimport Input from \"../components/presentational/Input\"\nimport ContainerStyles from \"../styles/layout.module.css\"\nimport ComponentStyles from \"../styles/component.module.css\"\nimport { connect } from 'react-redux';\nimport {submitPlaceType} from '../actions'\nimport Button from '@material-ui/core/Button';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\n\nclass PlaceType extends React.Component {\n  state = {\n    placeType:\"\",\n    propertyType:\"\", \n    guestSpace: \"\"\n  }\n\n  handleInput = (evt) => {\n    const { value,name } = evt.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmit = (evt) => {\n    const data = {  \n     ...this.state\n    }\n\n    this.props.submitPlaceType(data);\n    this.props.advance()\n  }\n\n  render(){\n    return (\n      <div >\n        <div className={ContainerStyles.formTitle}> Place Type </div>\n        <Input label=\"What kind of place are you listing?\" name={\"placeType\"} value={this.state.placeType} handleInput={this.handleInput}/>\n        <Input label=\"What type of property are you listing?\" name={\"propertyType\"} value={this.state.propertyType} handleInput={this.handleInput}/>\n        <Input label=\"What will guests have access to?\" name={\"guestSpace\"} value={this.state.guestSpace} handleInput={this.handleInput}/>\n        <Button  onClick={this.onSubmit}>Location <ArrowForward /></Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n })\n\nconst mapDispatchToProps = dispatch => ({\n  submitPlaceType: (data) => dispatch(submitPlaceType(data))\n })\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceType);\n\n","import React from \"react\"\nimport ComponentStyles from \"../../styles/component.module.css\"\n\nexport default ({label,value,name,handleInput}) => (\n   <div className={ComponentStyles.inputContainer}>\n    <div className={ComponentStyles.label}>{label} </div> \n    <input label={label} name={name} value={value} onChange={handleInput}/> \n  </div>\n)\n","import {\n  SUBMIT_PLACE_TYPE,\n  SUBMIT_BEDROOMS,\n  SUBMIT_BATHROOMS,\n  SUBMIT_LOCATION,\n  SUBMIT_LISTING_SUCCESS,\n  SUBMIT_LISTING_ERROR\n} from './constants'\nimport { sendListing } from \"./utils/Listing\"\n\nexport const submitPlaceType = data => dispatch => {\n dispatch({ \n    type: SUBMIT_PLACE_TYPE,\n    payload: data\n  })\n}\n\nexport const submitBedrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BEDROOMS,\n    payload: data\n  })\n}\n\nexport const submitBathrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BATHROOMS,\n    payload: data\n  })\n}\n\nexport const submitLocation = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_LOCATION,\n    payload: data\n  })\n}\n\nexport function submitListingWorker() {\n  console.log(\"listing\")\n\n  return (dispatch,getState) => {\n    const listing = getState()\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n        .then(response => response.json())\n        .then(json => dispatch(submitListingSuccess(json)))\n        .catch(err => dispatch(submitListingError(err)))\n  }\n}\n\nexport function submitListing() {\n\n  return (dispatch, getState) => {\n    const givenListing = getState().reducer;\n    const listing = {\n      bathrooms: givenListing.bathrooms,\n      bedrooms: givenListing.bedrooms,\n      location: givenListing.location,\n      placeType: givenListing.placeType,\n    }\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n            .then((res) => { dispatch(submitListingSuccess(res)) })\n            .catch((err) => {dispatch(submitListingError(err))})\n\n    // if (shouldFetchPosts(getState(), subreddit)) {\n    //   // Dispatch a thunk from thunk!\n    //   return dispatch(fetchPosts(subreddit))\n    // } else {\n    //   // Let the calling code know there's nothing to wait for.\n    //   return Promise.resolve()\n    // }\n  }\n}\n\nexport const submitListingSuccess = (response) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_SUCCESS,\n    payload: response\n  })\n}\nexport const submitListingError = (error) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_ERROR,\n    payload: error\n  })\n}\n","\nimport Axios from \"Axios\"\n\nexport function sendListing(url,listingData){\n  console.log(listingData)\n  const options = {\n    method: 'post',\n    url: url,\n    data: JSON.stringify(listingData)\n  }\n\n  return Axios(options)\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err;\n    });\n}"],"sourceRoot":""}