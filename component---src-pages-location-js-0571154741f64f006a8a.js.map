{"version":3,"sources":["webpack:///./src/pages/Location.js","webpack:///./src/actions.js","webpack:///./src/components/presentational/Input.js","webpack:///./src/utils/Listing.js"],"names":["Location","state","address","apartmentNumber","city","zipCode","country","handleInput","evt","_this$setState","_evt$target","target","value","name","_this","setState","onSubmit","data","Object","assign","props","submitLocation","switchPages","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","ContainerStyles","formTitle","_components_presentational_Input__WEBPACK_IMPORTED_MODULE_4__","label","this","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","onClick","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_9___default","React","Component","connect","_ref","page","reducer","dispatch","pageNumber","__webpack_require__","d","__webpack_exports__","submitPlaceType","submitBedrooms","submitBathrooms","submitListing","_constants__WEBPACK_IMPORTED_MODULE_0__","_utils_Listing__WEBPACK_IMPORTED_MODULE_1__","type","SWITCH_PAGES","payload","SUBMIT_PLACE_TYPE","SUBMIT_BEDROOMS","SUBMIT_BATHROOMS","SUBMIT_LOCATION","getState","givenListing","listing","bathrooms","bedrooms","location","placeType","sendListing","process","then","res","submitListingSuccess","catch","err","submitListingError","response","SUBMIT_LISTING_SUCCESS","error","SUBMIT_LISTING_ERROR","react__WEBPACK_IMPORTED_MODULE_1___default","ComponentStyles","inputContainer","onChange","Axios__WEBPACK_IMPORTED_MODULE_0__","Axios__WEBPACK_IMPORTED_MODULE_0___default","n","url","listingData","options","method","JSON","stringify","Axios"],"mappings":"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","file":"component---src-pages-location-js-0571154741f64f006a8a.js","sourcesContent":["import React from \"react\"\nimport Input from \"../components/presentational/Input\"\nimport { connect } from 'react-redux';\nimport ContainerStyles from \"../styles/form.module.css\"\nimport {submitLocation,switchPages} from '../actions'\nimport Button from '@material-ui/core/Button';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\n\nclass Location extends React.Component {\n  state = {\n    address: \"\",\n    apartmentNumber: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"\"\n  }\n\n  handleInput = (evt) => {\n    const { value,name } = evt.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmit = (evt) => {\n\n    const data = {  \n     ...this.state\n    }\n    \n    this.props.submitLocation(data);\n    this.props.switchPages(2);\n  }\n\n  render(){\n    return (\n        <div >\n          <div className={ContainerStyles.formTitle}> Location </div>\n          <Input label=\"Address:\" name={\"address\"} value={this.state.address} handleInput={this.handleInput}/>\n          <Input label=\"Apartment Number (if any):\" name={\"apartmentNumber\"} value={this.state.apartmentNumber} handleInput={this.handleInput}/>\n          <Input label=\"City:\" name={\"city\"} value={this.state.city} handleInput={this.handleInput}/>\n          <Input label=\"Zip Code:\" name={\"zipCode\"} value={this.state.zipCode} handleInput={this.handleInput}/>\n          <Button onClick={this.onSubmit}>Bedrooms <ArrowForward /></Button>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({reducer}) => ({page: reducer.page})\n\nconst mapDispatchToProps = dispatch => ({\n  switchPages: (pageNumber) => dispatch(switchPages(pageNumber)),\n  submitLocation: (data) => dispatch(submitLocation(data))\n })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\n\n","import {\n  SUBMIT_PLACE_TYPE,\n  SUBMIT_BEDROOMS,\n  SUBMIT_BATHROOMS,\n  SUBMIT_LOCATION,\n  SUBMIT_LISTING_SUCCESS,\n  SUBMIT_LISTING_ERROR,\n  SWITCH_PAGES,\n} from './constants'\nimport { sendListing } from \"./utils/Listing\"\n\nexport const switchPages = pageNumber => dispatch => {\n  dispatch({ \n    type: SWITCH_PAGES,\n    payload: pageNumber\n  })\n}\n\nexport const submitPlaceType = data => dispatch => {\n dispatch({ \n    type: SUBMIT_PLACE_TYPE,\n    payload: data\n  })\n}\n\nexport const submitBedrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BEDROOMS,\n    payload: data\n  })\n}\n\nexport const submitBathrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BATHROOMS,\n    payload: data\n  })\n}\n\nexport const submitLocation = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_LOCATION,\n    payload: data\n  })\n}\n\nexport function submitListingWorker() {\n  return (dispatch,getState) => {\n    const listing = getState()\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n        .then(response => response.json())\n        .then(json => dispatch(submitListingSuccess(json)))\n        .catch(err => dispatch(submitListingError(err)))\n  }\n}\n\nexport function submitListing() {\n\n  return (dispatch, getState) => {\n    const givenListing = getState().reducer;\n    const listing = {\n      bathrooms: givenListing.bathrooms,\n      bedrooms: givenListing.bedrooms,\n      location: givenListing.location,\n      placeType: givenListing.placeType,\n    }\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n            .then((res) => { dispatch(submitListingSuccess(res)) })\n            .catch((err) => {dispatch(submitListingError(err))})\n\n    // if (shouldFetchPosts(getState(), subreddit)) {\n    //   // Dispatch a thunk from thunk!\n    //   return dispatch(fetchPosts(subreddit))\n    // } else {\n    //   // Let the calling code know there's nothing to wait for.\n    //   return Promise.resolve()\n    // }\n  }\n}\n\nexport const submitListingSuccess = (response) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_SUCCESS,\n    payload: response\n  })\n}\nexport const submitListingError = (error) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_ERROR,\n    payload: error\n  })\n}","import React from \"react\"\nimport ComponentStyles from \"../../styles/component.module.css\"\n\nexport default ({label,value,name,handleInput}) => (\n   <div className={ComponentStyles.inputContainer}>\n    <div className={ComponentStyles.label}>{label} </div> \n    <input label={label} name={name} value={value} onChange={handleInput}/> \n  </div>\n)\n","\nimport Axios from \"Axios\"\n\nexport function sendListing(url,listingData){\n  const options = {\n    method: 'post',\n    url: url,\n    data: JSON.stringify(listingData)\n  }\n\n  return Axios(options)\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err;\n    });\n}"],"sourceRoot":""}