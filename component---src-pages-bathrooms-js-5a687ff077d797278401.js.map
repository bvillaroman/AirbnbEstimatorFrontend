{"version":3,"sources":["webpack:///./src/pages/Bathrooms.js","webpack:///./src/utils/Listing.js","webpack:///./src/actions.js","webpack:///./src/components/presentational/Input.js"],"names":["Bathrooms","state","bathrooms","responseText","handleInput","evt","_this$setState","_evt$target","target","value","name","_this","setState","onSubmit","data","parseInt","props","submitBathrooms","submitListing","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","ContainerStyles","formTitle","_components_presentational_Input__WEBPACK_IMPORTED_MODULE_3__","label","this","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","onClick","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_8___default","React","Component","connect","_ref","page","reducer","dispatch","sendListing","url","listingData","console","log","options","method","JSON","stringify","Axios","then","res","catch","err","__webpack_require__","d","__webpack_exports__","actions_switchPages","actions_submitPlaceType","actions_submitBedrooms","actions_submitBathrooms","actions_submitLocation","switchPages","pageNumber","type","SWITCH_PAGES","payload","submitPlaceType","SUBMIT_PLACE_TYPE","submitBedrooms","SUBMIT_BEDROOMS","SUBMIT_BATHROOMS","submitLocation","SUBMIT_LOCATION","getState","givenListing","process","bedrooms","location","placeType","submitListingSuccess","submitListingError","response","SUBMIT_LISTING_SUCCESS","error","SUBMIT_LISTING_ERROR","react__WEBPACK_IMPORTED_MODULE_1___default","ComponentStyles","inputContainer","onChange"],"mappings":"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","file":"component---src-pages-bathrooms-js-5a687ff077d797278401.js","sourcesContent":["import React from \"react\"\nimport Input from \"../components/presentational/Input\"\nimport { connect } from 'react-redux';\nimport ContainerStyles from \"../styles/form.module.css\"\nimport {submitBathrooms,submitListing} from '../actions'\nimport Button from '@material-ui/core/Button';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\n\nclass Bathrooms extends React.Component {\n  state = {\n    bathrooms:\"\", \n    responseText: \"\"\n  }\n\n  handleInput = (evt) => {\n    const { value,name } = evt.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmit = (evt) => {\n\n    const data = parseInt(this.state.bathrooms)\n    \n    this.props.submitBathrooms(data)\n    this.props.submitListing()\n  }\n\n  render(){\n    return (\n        <div>\n          <div className={ContainerStyles.formTitle}> Bathrooms </div>\n          <Input label=\"How many bathrooms are there?\" name={\"bathrooms\"} value={this.state.bathrooms} handleInput={this.handleInput}/>\n          <Button onClick={this.onSubmit}> Submit <ArrowForward /></Button>\n          <div className={ContainerStyles.formTitle}> {this.state.responseText} </div>\n        </div>\n    )\n  }\n};\n\nconst mapStateToProps = ({reducer}) => ({page: reducer.page})\n\nconst mapDispatchToProps = dispatch => ({\n  submitBathrooms: (data) => dispatch(submitBathrooms(data)),\n  submitListing: () => dispatch(submitListing())\n })\nexport default connect(mapStateToProps, mapDispatchToProps)(Bathrooms);\n\n","\nimport Axios from \"Axios\"\n\nexport function sendListing(url,listingData){\n  console.log(listingData)\n  const options = {\n    method: 'post',\n    url: url,\n    data: JSON.stringify(listingData)\n  }\n\n  return Axios(options)\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err;\n    });\n}","import {\n  SUBMIT_PLACE_TYPE,\n  SUBMIT_BEDROOMS,\n  SUBMIT_BATHROOMS,\n  SUBMIT_LOCATION,\n  SUBMIT_LISTING_SUCCESS,\n  SUBMIT_LISTING_ERROR,\n  SWITCH_PAGES,\n} from './constants'\nimport { sendListing } from \"./utils/Listing\"\n\nexport const switchPages = pageNumber => dispatch => {\n  dispatch({ \n    type: SWITCH_PAGES,\n    payload: pageNumber\n  })\n}\n\nexport const submitPlaceType = data => dispatch => {\n dispatch({ \n    type: SUBMIT_PLACE_TYPE,\n    payload: data\n  })\n}\n\nexport const submitBedrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BEDROOMS,\n    payload: data\n  })\n}\n\nexport const submitBathrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BATHROOMS,\n    payload: data\n  })\n}\n\nexport const submitLocation = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_LOCATION,\n    payload: data\n  })\n}\n\nexport function submitListingWorker() {\n  console.log(\"listing\")\n\n  return (dispatch,getState) => {\n    const listing = getState()\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n        .then(response => response.json())\n        .then(json => dispatch(submitListingSuccess(json)))\n        .catch(err => dispatch(submitListingError(err)))\n  }\n}\n\nexport function submitListing() {\n\n  return (dispatch, getState) => {\n    const givenListing = getState().reducer;\n    const listing = {\n      bathrooms: givenListing.bathrooms,\n      bedrooms: givenListing.bedrooms,\n      location: givenListing.location,\n      placeType: givenListing.placeType,\n    }\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n            .then((res) => { dispatch(submitListingSuccess(res)) })\n            .catch((err) => {dispatch(submitListingError(err))})\n\n    // if (shouldFetchPosts(getState(), subreddit)) {\n    //   // Dispatch a thunk from thunk!\n    //   return dispatch(fetchPosts(subreddit))\n    // } else {\n    //   // Let the calling code know there's nothing to wait for.\n    //   return Promise.resolve()\n    // }\n  }\n}\n\nexport const submitListingSuccess = (response) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_SUCCESS,\n    payload: response\n  })\n}\nexport const submitListingError = (error) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_ERROR,\n    payload: error\n  })\n}\n","import React from \"react\"\nimport ComponentStyles from \"../../styles/component.module.css\"\n\nexport default ({label,value,name,handleInput}) => (\n   <div className={ComponentStyles.inputContainer}>\n    <div className={ComponentStyles.label}>{label} </div> \n    <input label={label} name={name} value={value} onChange={handleInput}/> \n  </div>\n)\n"],"sourceRoot":""}