{"version":3,"sources":["webpack:///./src/pages/Bathrooms.js","webpack:///./src/actions.js","webpack:///./src/components/presentational/Input.js","webpack:///./src/utils/Listing.js"],"names":["Bathrooms","state","bathrooms","responseText","handleInput","evt","_this$setState","_evt$target","target","value","name","_this","setState","onSubmit","data","parseInt","props","submitBathrooms","listing","accommodates","bedrooms","guests","bed_type","handleBedType","placeType","roomType","numOfBedrooms","beds","numOfBedsAvailable","property_type","handlePropertyType","propertyType","coefficients","dummyData","location","city","price","calculatePrice","parseFloat","intercepts","toFixed","property","bed","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","ContainerStyles","formTitle","_components_presentational_Input__WEBPACK_IMPORTED_MODULE_3__","label","this","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","onClick","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_8___default","React","Component","connect","_ref","reducer","page","response","dispatch","submitListing","__webpack_require__","d","__webpack_exports__","switchPages","submitPlaceType","submitBedrooms","submitLocation","_constants__WEBPACK_IMPORTED_MODULE_0__","_utils_Listing__WEBPACK_IMPORTED_MODULE_1__","pageNumber","type","SWITCH_PAGES","payload","SUBMIT_PLACE_TYPE","SUBMIT_BEDROOMS","SUBMIT_BATHROOMS","SUBMIT_LOCATION","getState","givenListing","sendListing","process","then","res","submitListingSuccess","catch","err","submitListingError","SUBMIT_LISTING_SUCCESS","error","SUBMIT_LISTING_ERROR","react__WEBPACK_IMPORTED_MODULE_1___default","ComponentStyles","inputContainer","onChange","Axios__WEBPACK_IMPORTED_MODULE_0__","Axios__WEBPACK_IMPORTED_MODULE_0___default","n","url","listingData","options","method","JSON","stringify","Axios"],"mappings":"+OAUMA,sJACJC,MAAQ,CACNC,UAAU,GACVC,aAAc,MAGhBC,YAAc,SAACC,GAAQ,IAAAC,EAAAC,EACEF,EAAIG,OAAnBC,EADaF,EACbE,MAAMC,EADOH,EACPG,KACdC,EAAKC,WAALN,EAAA,IAAiBI,GAAQD,EAAzBH,OAGFO,SAAW,SAACR,GAEV,IAAMS,EAAOC,SAASJ,EAAKV,MAAMC,WAEjCS,EAAKK,MAAMC,gBAAgBH,GAE3B,IAAMI,EAAU,CACdC,aAAcR,EAAKK,MAAME,QAAQE,SAASC,OAC1CnB,UAAWa,SAASJ,EAAKV,MAAMC,WAC/BoB,SAAUX,EAAKY,cAAcZ,EAAKK,MAAME,QAAQM,UAAUC,UAC1DL,SAAUT,EAAKK,MAAME,QAAQE,SAASM,cACtCC,KAAMhB,EAAKK,MAAME,QAAQE,SAASQ,mBAClCC,cAAelB,EAAKmB,mBAAmBnB,EAAKK,MAAME,QAAQM,UAAUO,eAGhEC,EAAeC,EAAUtB,EAAKK,MAAME,QAAQgB,SAASC,MAErDC,EAAQzB,EAAK0B,eAAenB,EAAQc,GAC1CrB,EAAKC,SAAS,CAACT,aAAciC,OAU/BC,eAAiB,SAACnB,EAAQc,GASxB,OARWM,WAAWpB,EAAQC,aAAea,EAAab,cAC/CmB,WAAWpB,EAAQS,KAAOK,EAAaL,MACvCW,WAAWpB,EAAQE,SAAWY,EAAaZ,UAC3CkB,WAAWpB,EAAQhB,UAAY8B,EAAa9B,WAC5CoC,WAAWpB,EAAQI,SAAWU,EAAaV,UAC3CgB,WAAWpB,EAAQW,cAAgBG,EAAaH,eAGrBG,EAAaO,YAAYC,QAAQ,MAGzEV,mBAAqB,SAAAW,GACnB,IAAIhC,EAAQ,EACZ,OAAOgC,GACL,IAAK,YACHhC,EAAQ,EACR,MACF,IAAK,QACHA,EAAQ,EACR,MACF,IAAK,YACHA,EAAQ,EACR,MACF,IAAK,OACHA,EAAQ,EACR,MACF,IAAK,cACHA,EAAQ,EACR,MACF,IAAK,qBACHA,EAAQ,EACR,MACF,IAAK,cACHA,EAAQ,EACR,MACF,IAAK,QACHA,EAAQ,EACR,MACF,IAAK,kBACHA,EAAQ,EACR,MACF,IAAK,iBACHA,EAAQ,GACR,MACF,IAAK,SACHA,EAAQ,GACR,MACF,IAAK,cACHA,EAAQ,GACR,MACF,IAAK,SACHA,EAAQ,GACR,MACF,IAAK,YACHA,EAAQ,GACR,MACF,QACEA,EAAQ,EAGZ,OAAOA,KAGTc,cAAgB,SAAAmB,GACd,IAAIjC,EAAQ,EACZ,OAAOiC,GACL,IAAK,wBACHjC,EAAQ,EACR,MACF,IAAK,eACHA,EAAQ,EACR,MACF,IAAK,cACHA,EAAQ,EACR,MACF,QACEA,EAAQ,EAGZ,OAAOA,iCAGTkC,OAAA,WACE,OACIC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAgBC,WAAhC,eACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,MAAM,gCAAgCzC,KAAM,YAAaD,MAAO2C,KAAKnD,MAAMC,UAAWE,YAAagD,KAAKhD,cAC/GwC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAQS,QAASF,KAAKvC,UAAtB,WAAwC+B,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAExCD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAgBC,WAAhC,IAA6CG,KAAKnD,MAAME,aAAxD,UAnIcqD,IAAMC,WAmJfC,sBAVS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,QAAF,MAAgB,CACtCC,KAAMD,EAAQC,KACdC,SAAUF,EAAQE,SAClB5C,QAAS0C,IAGgB,SAAAG,GAAQ,MAAK,CACtC9C,gBAAiB,SAACH,GAAD,OAAUiD,EAAS9C,YAAgBH,KACpDkD,cAAe,kBAAMD,EAASC,kBAEjBN,CAA6C1D,qCC7J5DiE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAlD,IAAAgD,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAH,IAAA,IAAAQ,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAWaG,EAAc,SAAAM,GAAU,OAAI,SAAAX,GACvCA,EAAS,CACPY,KAAMC,IACNC,QAASH,MAIAL,EAAkB,SAAAvD,GAAI,OAAI,SAAAiD,GACtCA,EAAS,CACNY,KAAMG,IACND,QAAS/D,MAIAwD,EAAiB,SAAAxD,GAAI,OAAI,SAAAiD,GACpCA,EAAS,CACPY,KAAMI,IACNF,QAAS/D,MAIAG,EAAkB,SAAAH,GAAI,OAAI,SAAAiD,GACrCA,EAAS,CACPY,KAAMK,IACNH,QAAS/D,MAIAyD,EAAiB,SAAAzD,GAAI,OAAI,SAAAiD,GACpCA,EAAS,CACPY,KAAMM,IACNJ,QAAS/D,MAcN,SAASkD,IAEd,OAAO,SAACD,EAAUmB,GAChB,IAAMC,EAAeD,IAAWtB,QAC1B1C,EAAU,CACdhB,UAAWiF,EAAajF,UACxBkB,SAAU+D,EAAa/D,SACvBc,SAAUiD,EAAajD,SACvBV,UAAW2D,EAAa3D,WAE1B,OAAO4D,YAAeC,sEAA+BnE,GAC5CoE,KAAK,SAACC,GAAUxB,EAASyB,EAAqBD,MAC9CE,MAAM,SAACC,GAAS3B,EAAS4B,EAAmBD,OAYlD,IAAMF,EAAuB,SAAC1B,GAAD,OAAc,SAAAC,GAChDA,EAAS,CACPY,KAAMiB,IACNf,QAASf,MAGA6B,EAAqB,SAACE,GAAD,OAAW,SAAA9B,GAC3CA,EAAS,CACPY,KAAMmB,IACNjB,QAASgB,qFCtFE1B,EAAA,WAAAR,GAAA,IAAER,EAAFQ,EAAER,MAAM1C,EAARkD,EAAQlD,MAAMC,EAAdiD,EAAcjD,KAAKN,EAAnBuD,EAAmBvD,YAAnB,OACZ2F,EAAAlD,EAAAC,cAAA,OAAKC,UAAWiD,IAAgBC,gBAC/BF,EAAAlD,EAAAC,cAAA,OAAKC,UAAWiD,IAAgB7C,OAAQA,EAAxC,KACA4C,EAAAlD,EAAAC,cAAA,SAAOK,MAAOA,EAAOzC,KAAMA,EAAMD,MAAOA,EAAOyF,SAAU9F,wCCL7D6D,EAAAC,EAAAC,EAAA,sBAAAiB,IAAA,IAAAe,EAAAlC,EAAA,KAAAmC,EAAAnC,EAAAoC,EAAAF,GAEO,SAASf,EAAYkB,EAAIC,GAC9B,IAAMC,EAAU,CACdC,OAAQ,OACRH,IAAKA,EACLxF,KAAM4F,KAAKC,UAAUJ,IAGvB,OAAOK,IAAMJ,GACVlB,KAAK,SAACC,GACL,OAAOA,EAAIzE,OAEZ2E,MAAM,SAACC,GACN,OAAOA","file":"component---src-pages-bathrooms-js-791f4f12529a3ff26cdc.js","sourcesContent":["import React from \"react\"\nimport Input from \"../components/presentational/Input\"\nimport { connect } from 'react-redux';\nimport ContainerStyles from \"../styles/form.module.css\"\nimport {submitBathrooms,submitListing} from '../actions'\nimport Button from '@material-ui/core/Button';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport {sendListing} from \"../utils/Listing\"\nimport dummyData from \"../dummyData.json\"\n\nclass Bathrooms extends React.Component {\n  state = {\n    bathrooms:\"\", \n    responseText: \"\",\n  }\n\n  handleInput = (evt) => {\n    const { value,name } = evt.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmit = (evt) => {\n\n    const data = parseInt(this.state.bathrooms)\n    \n    this.props.submitBathrooms(data)\n    // this.props.submitListing()\n    const listing = {\n      accommodates: this.props.listing.bedrooms.guests,\n      bathrooms: parseInt(this.state.bathrooms),\n      bed_type: this.handleBedType(this.props.listing.placeType.roomType),\n      bedrooms: this.props.listing.bedrooms.numOfBedrooms,\n      beds: this.props.listing.bedrooms.numOfBedsAvailable,\n      property_type: this.handlePropertyType(this.props.listing.placeType.propertyType)\n    }\n\n    const coefficients = dummyData[this.props.listing.location.city]     \n    \n    const price = this.calculatePrice(listing,coefficients)\n    this.setState({responseText: price})\n    // console.log(this.parseLocations())\n    // sendListing(`${process.env.API_URL}/listings`,listing)\n    // .then((data) => {\n    //   const price = data.Prediction ? `$ ${data.Prediction.LinearRegression.toFixed(2)}` : \"\";\n    //   this.setState({responseText: price})\n    // })\n\n  }\n\n  calculatePrice = (listing,coefficients) => {\n    const m1 = parseFloat(listing.accommodates * coefficients.accommodates)\n    const m2 = parseFloat(listing.beds * coefficients.beds)\n    const m3 = parseFloat(listing.bedrooms * coefficients.bedrooms)\n    const m4 = parseFloat(listing.bathrooms * coefficients.bathrooms)\n    const m5 = parseFloat(listing.bed_type * coefficients.bed_type)\n    const m6 = parseFloat(listing.property_type * coefficients.property_type)\n    // console.log(m1 + m2 + m3 + m4 + m5 + m6 )\n    // return m1\n    return (m1 + m2 + m3 + m4 + m5 + m6 + coefficients.intercepts).toFixed(2)\n  }\n\n  handlePropertyType = property => {\n    let value = 1;\n    switch(property) {\n      case \"Apartment\": \n        value = 1;\n        break;\n      case \"House\": \n        value = 2;\n        break;  \n      case \"Townhouse\": \n        value = 3;\n        break;    \n      case \"Loft\": \n        value = 4;\n        break;\n      case \"Condominium\": \n        value = 5;\n        break;       \n      case \"Serviced Apartment\": \n        value = 6;\n        break;   \n      case \"Guest Suite\": \n        value = 7;\n        break;   \n      case \"Other\": \n        value = 8;\n        break;   \n      case \"Bed & Breakfast\": \n        value = 9;\n        break;   \n      case \"Boutique Hotel\": \n        value = 10;\n        break;  \n      case \"Resort\": \n        value = 11;\n        break;    \n      case \"Guest House\": \n        value = 12;\n        break;   \n      case \"Hostel\": \n        value = 13;\n        break;   \n      case \"Timeshare\": \n        value = 15;\n        break;   \n      default: \n        value = 1;\n        break;   \n    }\n    return value;\n  }\n\n  handleBedType = bed => {\n    let value = 1;\n    switch(bed) {\n      case \"Entire home/apartment\": \n        value = 1;\n        break;\n      case \"Private room\": \n        value = 2;\n        break;  \n      case \"Shared room\": \n        value = 3;\n        break;      \n      default: \n        value = 1;\n        break;   \n    }\n    return value;\n  }\n\n  render(){\n    return (\n        <div>\n          <div className={ContainerStyles.formTitle}> Bathrooms </div>\n          <Input label=\"How many bathrooms are there?\" name={\"bathrooms\"} value={this.state.bathrooms} handleInput={this.handleInput}/>\n          <Button onClick={this.onSubmit}> Submit <ArrowForward /></Button>\n          {/* {this.state.responseText} */}\n          <br/>\n          <br/>\n          <div className={ContainerStyles.formTitle}> {this.state.responseText} </div>\n        </div>\n    )\n  }\n};\n\nconst mapStateToProps = ({reducer}) => ({\n  page: reducer.page,\n  response: reducer.response,\n  listing: reducer\n})\n\nconst mapDispatchToProps = dispatch => ({\n  submitBathrooms: (data) => dispatch(submitBathrooms(data)),\n  submitListing: () => dispatch(submitListing())\n })\nexport default connect(mapStateToProps, mapDispatchToProps)(Bathrooms);\n\n","import {\n  SUBMIT_PLACE_TYPE,\n  SUBMIT_BEDROOMS,\n  SUBMIT_BATHROOMS,\n  SUBMIT_LOCATION,\n  SUBMIT_LISTING_SUCCESS,\n  SUBMIT_LISTING_ERROR,\n  SWITCH_PAGES,\n} from './constants'\nimport { sendListing } from \"./utils/Listing\"\n\nexport const switchPages = pageNumber => dispatch => {\n  dispatch({ \n    type: SWITCH_PAGES,\n    payload: pageNumber\n  })\n}\n\nexport const submitPlaceType = data => dispatch => {\n dispatch({ \n    type: SUBMIT_PLACE_TYPE,\n    payload: data\n  })\n}\n\nexport const submitBedrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BEDROOMS,\n    payload: data\n  })\n}\n\nexport const submitBathrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BATHROOMS,\n    payload: data\n  })\n}\n\nexport const submitLocation = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_LOCATION,\n    payload: data\n  })\n}\n\nexport function submitListingWorker() {\n  return (dispatch,getState) => {\n    const listing = getState()\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n        .then(response => response.json())\n        .then(json => dispatch(submitListingSuccess(json)))\n        .catch(err => dispatch(submitListingError(err)))\n  }\n}\n\nexport function submitListing() {\n\n  return (dispatch, getState) => {\n    const givenListing = getState().reducer;\n    const listing = {\n      bathrooms: givenListing.bathrooms,\n      bedrooms: givenListing.bedrooms,\n      location: givenListing.location,\n      placeType: givenListing.placeType,\n    }\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n            .then((res) => { dispatch(submitListingSuccess(res)) })\n            .catch((err) => {dispatch(submitListingError(err))})\n\n    // if (shouldFetchPosts(getState(), subreddit)) {\n    //   // Dispatch a thunk from thunk!\n    //   return dispatch(fetchPosts(subreddit))\n    // } else {\n    //   // Let the calling code know there's nothing to wait for.\n    //   return Promise.resolve()\n    // }\n  }\n}\n\nexport const submitListingSuccess = (response) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_SUCCESS,\n    payload: response\n  })\n}\nexport const submitListingError = (error) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_ERROR,\n    payload: error\n  })\n}","import React from \"react\"\nimport ComponentStyles from \"../../styles/component.module.css\"\n\nexport default ({label,value,name,handleInput}) => (\n   <div className={ComponentStyles.inputContainer}>\n    <div className={ComponentStyles.label}>{label} </div> \n    <input label={label} name={name} value={value} onChange={handleInput}/> \n  </div>\n)\n","\nimport Axios from \"Axios\"\n\nexport function sendListing(url,listingData){\n  const options = {\n    method: 'post',\n    url: url,\n    data: JSON.stringify(listingData)\n  }\n\n  return Axios(options)\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err;\n    });\n}"],"sourceRoot":""}