{"version":3,"sources":["webpack:///./src/pages/Bathrooms.js","webpack:///./src/utils/Listing.js","webpack:///./src/components/presentational/Input.js","webpack:///./src/actions.js"],"names":["Bathrooms","state","bathrooms","responseText","handleInput","evt","_this$setState","_evt$target","target","value","name","_this","setState","onSubmit","data","parseInt","props","submitBathrooms","submitListing","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","ContainerStyles","mainContainer","formTitle","_components_presentational_Input__WEBPACK_IMPORTED_MODULE_4__","label","this","onClick","React","Component","connect","Object","assign","dispatch","__webpack_require__","d","__webpack_exports__","sendListing","Axios__WEBPACK_IMPORTED_MODULE_0__","Axios__WEBPACK_IMPORTED_MODULE_0___default","n","url","listingData","console","log","options","method","JSON","stringify","Axios","then","res","catch","err","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","inputContainer","onChange","submitPlaceType","submitBedrooms","submitLocation","_constants__WEBPACK_IMPORTED_MODULE_0__","_utils_Listing__WEBPACK_IMPORTED_MODULE_1__","type","SUBMIT_PLACE_TYPE","payload","SUBMIT_BEDROOMS","SUBMIT_BATHROOMS","SUBMIT_LOCATION","getState","givenListing","reducer","listing","bedrooms","location","placeType","process","submitListingSuccess","submitListingError","response","SUBMIT_LISTING_SUCCESS","error","SUBMIT_LISTING_ERROR"],"mappings":"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","file":"component---src-pages-bathrooms-js-a1039a00e9af89e79a14.js","sourcesContent":["import React from \"react\"\nimport Input from \"../components/presentational/Input\"\nimport { connect } from 'react-redux';\nimport ContainerStyles from \"../styles/layout.module.css\"\nimport {submitBathrooms,submitListing} from '../actions'\n\nclass Bathrooms extends React.Component {\n  state = {\n    bathrooms:\"\", \n    responseText: \"\"\n  }\n\n  handleInput = (evt) => {\n    const { value,name } = evt.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmit = (evt) => {\n\n    const data = parseInt(this.state.bathrooms)\n    \n    this.props.submitBathrooms(data)\n    this.props.submitListing()\n\n  }\n\n  render(){\n    return (\n        <div className={ContainerStyles.mainContainer}>\n          <div className={ContainerStyles.formTitle}> Bathrooms </div>\n          <Input label=\"How many bathrooms are there?\" name={\"bathrooms\"} value={this.state.bathrooms} handleInput={this.handleInput}/>\n          <button onClick={this.onSubmit}> Submit </button>\n          <div className={ContainerStyles.formTitle}> {this.state.responseText} </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  submitBathrooms: (data) => dispatch(submitBathrooms(data)),\n  submitListing: () => dispatch(submitListing())\n })\nexport default connect(mapStateToProps, mapDispatchToProps)(Bathrooms);\n\n","\nimport Axios from \"Axios\"\n\nexport function sendListing(url,listingData){\n  console.log(listingData)\n  const options = {\n    method: 'post',\n    url: url,\n    data: JSON.stringify(listingData)\n  }\n\n  return Axios(options)\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err;\n    });\n}","import React from \"react\"\nimport ContainerStyles from \"../../styles/component.module.css\"\n\nexport default ({label,value,name,handleInput}) => (\n  <div className={ContainerStyles.inputContainer}>\n    <div className={ContainerStyles.label}>{label} </div>\n    <input name={name} value={value} onChange={handleInput}/>\n  </div>\n)\n","import {\n  SUBMIT_PLACE_TYPE,\n  SUBMIT_BEDROOMS,\n  SUBMIT_BATHROOMS,\n  SUBMIT_LOCATION,\n  SUBMIT_LISTING_SUCCESS,\n  SUBMIT_LISTING_ERROR\n} from './constants'\nimport { sendListing } from \"./utils/Listing\"\n\nexport const submitPlaceType = data => dispatch => {\n dispatch({ \n    type: SUBMIT_PLACE_TYPE,\n    payload: data\n  })\n}\n\nexport const submitBedrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BEDROOMS,\n    payload: data\n  })\n}\n\nexport const submitBathrooms = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_BATHROOMS,\n    payload: data\n  })\n}\n\nexport const submitLocation = data => dispatch => {\n  dispatch({ \n    type: SUBMIT_LOCATION,\n    payload: data\n  })\n}\n\nexport function submitListingWorker() {\n  console.log(\"listing\")\n\n  return (dispatch,getState) => {\n    const listing = getState()\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n        .then(response => response.json())\n        .then(json => dispatch(submitListingSuccess(json)))\n        .catch(err => dispatch(submitListingError(err)))\n  }\n}\n\nexport function submitListing() {\n\n  return (dispatch, getState) => {\n    const givenListing = getState().reducer;\n    const listing = {\n      bathrooms: givenListing.bathrooms,\n      bedrooms: givenListing.bedrooms,\n      location: givenListing.location,\n      placeType: givenListing.placeType,\n    }\n    console.log(listing)\n    return sendListing(`${process.env.API_URL}/listings`,listing)\n            .then((res) => { dispatch(submitListingSuccess(res)) })\n            .catch((err) => {dispatch(submitListingError(err))})\n\n    // if (shouldFetchPosts(getState(), subreddit)) {\n    //   // Dispatch a thunk from thunk!\n    //   return dispatch(fetchPosts(subreddit))\n    // } else {\n    //   // Let the calling code know there's nothing to wait for.\n    //   return Promise.resolve()\n    // }\n  }\n}\n\nexport const submitListingSuccess = (response) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_SUCCESS,\n    payload: response\n  })\n}\nexport const submitListingError = (error) => dispatch => {\n  dispatch({ \n    type: SUBMIT_LISTING_ERROR,\n    payload: error\n  })\n}\n"],"sourceRoot":""}